security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        users_in_memory: { memory: null }
        user_by_email_provider:
            id: App\User\Infrastructure\Security\Symfony\UserProvider\UserByEmailProvider
        user_by_email_admin_provider:
            id: App\User\Infrastructure\Security\Symfony\UserProvider\UserByEmailAdminProvider
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern: ^/api/auth/token/login
            stateless: true
            provider: user_by_email_provider
            json_login:
                check_path: /api/auth/token/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/api
            provider: user_by_email_provider
            stateless: true
            jwt: ~
        admin:
            pattern: ^/admin
            provider: user_by_email_admin_provider
            form_login:
                login_path: admin_sign_in
                check_path: admin_sign_in
                enable_csrf: true
                default_target_path: admin_dashboard
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
        main:
            lazy: true
            provider: users_in_memory

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/auth/token/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/sign-up, roles: PUBLIC_ACCESS }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/admin/sign-in,       roles: PUBLIC_ACCESS }
        - { path: ^/admin,       roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: plaintext
